#include <GL/glut.h>
#include <math.h>
void display()
{
    glClear(GL_COLOR_BUFFER_BIT);

    // Red square
    glColor3f(1.0, 0.0, 0.0);
    glBegin(GL_QUADS);
    glVertex2f(-0.9, 0.5);
    glVertex2f(-0.5, 0.5);
    glVertex2f(-0.5, 0.9);
    glVertex2f(-0.9, 0.9);
    glEnd();

    // Green square with gradient
    glBegin(GL_QUADS);
    glColor3f(0.0, 1.0, 0.0);
    glVertex2f(-0.9, -0.1);
    glVertex2f(-0.5, -0.1);
    glVertex2f(-0.5, -0.5);
    glVertex2f(-0.9, -0.5);
    glEnd();

    //white grayish gradient square
    glBegin(GL_QUADS);
    glColor3f(0.5, 0.5, 0.5);
    glColor3f(0.75, 0.75, 0.75);
    glVertex2f(-0.9, -0.6);
    glVertex2f(-0.5, -0.6);
    glColor3f(0.75, 0.75, 0.75);
    glColor3f(0.5, 0.5, 0.5);
    glVertex2f(-0.5, -0.9);
    glVertex2f(-0.9, -0.9);
    glEnd();
    // Yellow hexagon
    glColor3f(1.0, 1.0, 0.0);
    glBegin(GL_POLYGON);
    for (int i = 0; i < 6; ++i)
    {
        glVertex2f(0.5 * cos(i * 2 * 3.1415926 / 6), 0.5 + 0.5 * sin(i * 2 * 3.1415926 / 6));
    }
    glEnd();

    // Blue triangle
    glColor3f(0.0, 0.0, 1.0);
    glBegin(GL_TRIANGLES);
    glVertex2f(0.0, -0.5);
    glVertex2f(0.5, -1.0);
    glVertex2f(-0.5, -1.0);
    glEnd();

    // Triangle with gradient
    glBegin(GL_TRIANGLES);
    glColor3f(1.0, 0.0, 0.0);
    glVertex2f(0.0, -0.5);
    glColor3f(0.0, 1.0, 0.0);
    glVertex2f(0.5, -1.0);
    glColor3f(0.0, 0.0, 1.0);
    glVertex2f(0.5, 0.0);
    glEnd();

    glFlush();
}

void init()
{
    glClearColor(0.0, 0.0, 0.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-1.0, 1.0, -1.0, 1.0);
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Display Shapes");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
